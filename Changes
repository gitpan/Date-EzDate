Revision history for Perl extension Date::EzDate

Version 0.90 November 1, 2001

      Initial release

    Version 0.91 December 10, 2001

      UI enhancements

    Version 0.92 January 15, 2002

      Fixed some bugs

    Version 0.93 February 11, 2002

      Fixed some more bugs

    Version 1.00 July 5, 2002

      Fixed a bug in next_month.

      Added a lotta functionality:

      - Space insensitive property names

      - Custom formats using braced property names

      - Stored custom formats

      - More supportive of super-classing

      - All that and yet actually decreased the volume of code

      - Decided this sucker's ready for 1.00 release

      Also made a few minor not-so-backward-compatible changes:

      - Got rid of the printabledate and printabletime properties, which
      were just relics from an early project that used EzDate.

      - Changed nextmonth to next_month to stay compatible with other
      methods that were added and will be added.

    Version 1.01 Aug 14, 2002

      - Fixed bug that clones do not return formats

      - Tightened up the code a little

    Version 1.02 Sep 03, 2002

      - Added ability to set a format by just assigning it to a key

      - Added warnings to situations where the IM in DWIM isn't always
      clear.

      - Added stringification of EzDate object

      - Added overloaded comparison operators

      - Made not-backward-compatible change to the full format.

      - Improved efficiency of custom formats

    Version 1.04 Sep 03, 2002

      - Added ordinals

      - Added "noon" and "midnight" keywords.

    Version 1.05 Dec 11, 2002

      - Added format yyyy-mm-dd

      - Added feature that if Date::EzDate->new() is called with an
      unrecognized format, then undef is returned. This allows you to check
      formats for validity.

      - Fixed off-by-one problem that occurred when, for example, moving
      Jan 1, 2003 back one year to 2002

    Version 1.06 Mar 11, 2003

      - Non-backwards compatible change: changed $compare global to
      $overload.

      - Non-backwards compatible change: EzDate objects now stringify to
      the "default" format instead of the "full" format.

      - Added overloading of addition and subtraction.

      - Added recognition of the following time format, which is used by
      PostGreSql: 2003-02-13 12:35:49.480975-05

      - Fixed bug in which days of DST changeover produced off-by-one
      problem when setting hours.

      - Fixed bug in which the epochday value for dates before the epoch
      are off-by-one.

    Version 1.07 May 21, 2003

      - Implemented fix for DST problem. Used patch submitted by Greg
      Estep. Thanks Greg!

    Version 1.08 June 10, 2003

      - Changed test.pl: removed test that incorrectly relied on the host
      having a specific epoch. No change to the module itself.

    Version 1.09

      - Fixed daylight savings time, again. This time I think the fix will
      actually fix it. Sheesh.

      - Added dayparam as built-in format.

      - Fixed bug: system did not recognize "day of week short" in all the
      places it should.

      - Added some default formats: fullday, fulldate, dayandtime

      - changed default format to dayandtime

      - Fixed some bogus documentation.

      - Fixed bug such that new method dies on invalid date format even
      when it is supposed to just give a warning.

      - Added date_range_string, time_range_string, methods

      - Removing MANY tests from test.pl. I discovered that the tests that
      were failing were not proper tests for the module.

      - Fixed monthnum issue. Now you can set monthnum to any integer, and
      it will roll the month forward or backwards that many times. The
      resulting monthnum will still always be from 0..11.

      - Clarified example of using $Date::EzDate::overload

    Version 1.10

      - Removed Debug::ShowStuff call from module. That shouldn't have been
      in the distribution.

    Version 1.11

      This version had been considered the final release of Date::EzDate.
      However, as of verson 1.12 it is active again.

    Version 1.12 June 12, 2012

      In version 1.11 I had stated that Date::EzDate would no longer be
      developed further or supported. Basically, I changed my mind and am
      now developing it again.

      - Added date format "Tue Jun 12 13:03:28 2012".
